{"version":3,"file":"e825adb98dfcd504f6dd75035a1e6e3f8216cfb6-fd834cdec61633e5e14d.js","mappings":"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","sources":["webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/id.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/types.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/data.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/on-next-frame.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://my-gatsby-site/./node_modules/hey-listen/dist/hey-listen.es.js","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/find-spring.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/spring.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/decay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/legacy-popmotion/inertia.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/animation/animate.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://my-gatsby-site/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext, useContext } from 'react';\n\nconst MotionContext = createContext({});\nfunction useVisualElementContext() {\n    return useContext(MotionContext).visualElement;\n}\n\nexport { MotionContext, useVisualElementContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { useVisualElementContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const parent = useVisualElementContext();\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\n\nconst variantProps = [\n    \"initial\",\n    \"animate\",\n    \"exit\",\n    \"whileHover\",\n    \"whileDrag\",\n    \"whileTap\",\n    \"whileFocus\",\n    \"whileInView\",\n];\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"exit\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"whileFocus\",\n        \"whileDrag\",\n        \"whileInView\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Returns true if the provided key is a CSS variable\n */\nfunction isCSSVariable(key) {\n    return key.startsWith(\"--\");\n}\n\nexport { isCSSVariable };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariable } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariable(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","var AnimationType;\n(function (AnimationType) {\n    AnimationType[\"Animate\"] = \"animate\";\n    AnimationType[\"Hover\"] = \"whileHover\";\n    AnimationType[\"Tap\"] = \"whileTap\";\n    AnimationType[\"Drag\"] = \"whileDrag\";\n    AnimationType[\"Focus\"] = \"whileFocus\";\n    AnimationType[\"InView\"] = \"whileInView\";\n    AnimationType[\"Exit\"] = \"exit\";\n})(AnimationType || (AnimationType = {}));\n\nexport { AnimationType };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(AnimationType.Hover, isActive);\n        }\n        if (props[callbackName]) {\n            props[callbackName](event, info);\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                /**\n                 * We only count this as a tap gesture if the event.target is the same\n                 * as, or a child of, this component's element\n                 */\n                !isNodeOrChild(this.node.current, endEvent.target)\n                    ? onTapCancel && onTapCancel(endEvent, endInfo)\n                    : onTap && onTap(endEvent, endInfo);\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", this.node.getProps().onTap);\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, true);\n        }\n        onTapStart && onTapStart(event, info);\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(AnimationType.Tap, false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        onTapCancel && onTapCancel(event, info);\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    /**\n     * TODO: Remove this in 10.0\n     */\n    viewportFallback() {\n        /**\n         * Fire this in an rAF because, at this point, the animation state\n         * won't have flushed for the first time and there's certain logic in\n         * there that behaves differently on the initial animation.\n         */\n        requestAnimationFrame(() => {\n            this.hasEnteredView = true;\n            const { onViewportEnter } = this.node.getProps();\n            onViewportEnter && onViewportEnter(null);\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, true);\n            }\n        });\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once, fallback = true, } = viewport;\n        if (typeof IntersectionObserver === \"undefined\") {\n            if (fallback)\n                this.viewportFallback();\n            return;\n        }\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(AnimationType.InView, isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { AnimationType } from '../render/utils/types.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(AnimationType.Focus, false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","/*\n  Detect and load appropriate clock setting for the execution environment\n */\nconst defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"9.0.7\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve) || null;\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        this.animation = null;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","var warning = function () { };\r\nvar invariant = function () { };\r\nif (process.env.NODE_ENV !== 'production') {\r\n    warning = function (check, message) {\r\n        if (!check && typeof console !== 'undefined') {\r\n            console.warn(message);\r\n        }\r\n    };\r\n    invariant = function (check, message) {\r\n        if (!check) {\r\n            throw new Error(message);\r\n        }\r\n    };\r\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n\nexport { secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from 'hey-listen';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from 'hey-listen';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from 'hey-listen';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ keyframes: keyframeValues, ease = easeInOut, times, duration = 300, }) {\n    keyframeValues = [...keyframeValues];\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    function createInterpolator() {\n        return interpolate(absoluteTimes, keyframeValues, {\n            ease: Array.isArray(easingFunctions)\n                ? easingFunctions\n                : defaultEasing(keyframeValues, easingFunctions),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            keyframeValues.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n","import { warning } from 'hey-listen';\nimport { clamp } from '../../utils/clamp.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= maxDuration * 1000, \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, duration / 1000);\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = duration * 1000;\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { findSpring, calcAngularFreq } from './find-spring.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nconst velocitySampleDuration = 5;\n/**\n * This is based on the spring implementation of Wobble https://github.com/skevy/wobble\n */\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    let origin = keyframes[0];\n    let target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    function createSpring() {\n        const initialDelta = target - origin;\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        /**\n         * If we're working on a granular scale, use smaller defaults for determining\n         * when the spring is finished.\n         *\n         * These defaults have been selected emprically based on what strikes a good\n         * ratio between feeling good and finishing as soon as changes are imperceptible.\n         */\n        const isGranularScale = Math.abs(initialDelta) < 5;\n        restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n        restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            // Underdamped spring\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (target -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            // Critically damped spring\n            resolveSpring = (t) => target -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            // Overdamped spring\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                // When performing sinh or cosh values can hit Infinity so we cap them here\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (target -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        const prevT = Math.max(0, t - velocitySampleDuration);\n                        currentVelocity = velocityPerSecond(current - resolveSpring(prevT), t - prevT);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        flipTarget: () => {\n            initialVelocity = -initialVelocity;\n            [origin, target] = [target, origin];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n","import { keyframes } from './keyframes.mjs';\nimport { spring } from './spring.mjs';\nimport { decay } from './decay.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nconst types = {\n    decay,\n    keyframes: keyframes,\n    tween: keyframes,\n    spring,\n};\nfunction loopElapsed(elapsed, duration, delay = 0) {\n    return elapsed - duration - delay;\n}\nfunction reverseElapsed(elapsed, duration = 0, delay = 0, isForwardPlayback = true) {\n    return isForwardPlayback\n        ? loopElapsed(duration + -elapsed, duration, delay)\n        : duration - (elapsed - duration) + delay;\n}\nfunction hasRepeatDelayElapsed(elapsed, duration, delay, isForwardPlayback) {\n    return isForwardPlayback ? elapsed >= duration + delay : elapsed <= -delay;\n}\nconst framesync = (update) => {\n    const passTimestamp = ({ delta }) => update(delta);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n    };\n};\nfunction animateValue({ duration, driver = framesync, elapsed = 0, repeat: repeatMax = 0, repeatType = \"loop\", repeatDelay = 0, keyframes: keyframes$1, autoplay = true, onPlay, onStop, onComplete, onRepeat, onUpdate, type = \"keyframes\", ...options }) {\n    const initialElapsed = elapsed;\n    let driverControls;\n    let repeatCount = 0;\n    let computedDuration = duration;\n    let isComplete = false;\n    let isForwardPlayback = true;\n    let interpolateFromNumber;\n    const animator = types[keyframes$1.length > 2 ? \"keyframes\" : type] || keyframes;\n    const origin = keyframes$1[0];\n    const target = keyframes$1[keyframes$1.length - 1];\n    let state = { done: false, value: origin };\n    /**\n     * If this value needs interpolation (ie is non-numerical), set up an interpolator.\n     * TODO: Keyframes animation also performs this step. This could be removed so it only happens here.\n     */\n    const { needsInterpolation } = animator;\n    if (needsInterpolation && needsInterpolation(origin, target)) {\n        interpolateFromNumber = interpolate([0, 100], [origin, target], {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const animation = animator({\n        ...options,\n        duration,\n        keyframes: keyframes$1,\n    });\n    function repeat() {\n        repeatCount++;\n        if (repeatType === \"reverse\") {\n            isForwardPlayback = repeatCount % 2 === 0;\n            elapsed = reverseElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback);\n        }\n        else {\n            elapsed = loopElapsed(elapsed, computedDuration, repeatDelay);\n            if (repeatType === \"mirror\")\n                animation.flipTarget();\n        }\n        isComplete = false;\n        onRepeat && onRepeat();\n    }\n    function complete() {\n        driverControls && driverControls.stop();\n        onComplete && onComplete();\n    }\n    function update(delta) {\n        if (!isForwardPlayback)\n            delta = -delta;\n        elapsed += delta;\n        if (!isComplete) {\n            state = animation.next(Math.max(0, elapsed));\n            if (interpolateFromNumber)\n                state.value = interpolateFromNumber(state.value);\n            isComplete = isForwardPlayback ? state.done : elapsed <= 0;\n        }\n        onUpdate && onUpdate(state.value);\n        if (isComplete) {\n            if (repeatCount === 0) {\n                computedDuration =\n                    computedDuration !== undefined ? computedDuration : elapsed;\n            }\n            if (repeatCount < repeatMax) {\n                hasRepeatDelayElapsed(elapsed, computedDuration, repeatDelay, isForwardPlayback) && repeat();\n            }\n            else {\n                complete();\n            }\n        }\n    }\n    function play() {\n        onPlay && onPlay();\n        driverControls = driver(update);\n        driverControls.start();\n    }\n    autoplay && play();\n    return {\n        stop: () => {\n            onStop && onStop();\n            driverControls && driverControls.stop();\n        },\n        /**\n         * Set the current time of the animation. This is purposefully\n         * mirroring the WAAPI animation API to make them interchanagable.\n         * Going forward this file should be ported more towards\n         * https://github.com/motiondivision/motionone/blob/main/packages/animation/src/Animation.ts\n         * Which behaviourally adheres to WAAPI as far as possible.\n         *\n         * WARNING: This is not safe to use for most animations. We currently\n         * only use it for handoff from WAAPI within Framer.\n         *\n         * This animation function consumes time every frame rather than being sampled for time.\n         * So the sample() method performs some headless frames to ensure\n         * repeats are handled correctly. Ideally in the future we will replace\n         * that method with this, once repeat calculations are pure.\n         */\n        set currentTime(t) {\n            elapsed = initialElapsed;\n            update(t);\n        },\n        /**\n         * animate() can't yet be sampled for time, instead it\n         * consumes time. So to sample it we have to run a low\n         * temporal-resolution version.\n         */\n        sample: (t) => {\n            elapsed = initialElapsed;\n            const sampleResolution = duration && typeof duration === \"number\"\n                ? Math.max(duration * 0.5, 50)\n                : 50;\n            let sampleElapsed = 0;\n            update(0);\n            while (sampleElapsed <= t) {\n                const remaining = t - sampleElapsed;\n                update(Math.min(remaining, sampleResolution));\n                sampleElapsed += sampleResolution;\n            }\n            return state;\n        },\n    };\n}\n\nexport { animateValue, hasRepeatDelayElapsed, loopElapsed, reverseElapsed };\n","function decay({ \n/**\n * The decay animation dynamically calculates an end of the animation\n * based on the initial keyframe, so we only need to define a single keyframe\n * as default.\n */\nkeyframes = [0], velocity = 0, power = 0.8, timeConstant = 350, restDelta = 0.5, modifyTarget, }) {\n    const origin = keyframes[0];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    return {\n        next: (t) => {\n            const delta = -amplitude * Math.exp(-t / timeConstant);\n            state.done = !(delta > restDelta || delta < -restDelta);\n            state.value = state.done ? target : target + delta;\n            return state;\n        },\n        flipTarget: () => { },\n    };\n}\n\nexport { decay };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateValue } from '../legacy-popmotion/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\"opacity\"]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0;\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, elapsed = 0, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (options.type === \"spring\" || !isWaapiSupportedEasing(options.ease)) {\n        /**\n         * If we need to pre-generate keyframes and repeat is infinite then\n         * early return as this will lock the thread.\n         */\n        if (options.repeat === Infinity)\n            return;\n        const sampleAnimation = animateValue({ ...options, elapsed: 0 });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < 20000) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        delay: -elapsed,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return animation.currentTime || 0;\n        },\n        set currentTime(t) {\n            animation.currentTime = t;\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    return element.animate({ [valueName]: keyframes, offset: times }, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { delay } from '../utils/delay.mjs';\n\nfunction createInstantAnimation({ keyframes, elapsed, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n    };\n    return elapsed ? { stop: delay(setValue, -elapsed) } : setValue();\n}\n\nexport { createInstantAnimation };\n","const underDampedSpring = () => ({\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n});\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst linearTween = () => ({\n    type: \"keyframes\",\n    ease: \"linear\",\n    duration: 0.3,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\nconst defaultTransitions = {\n    x: underDampedSpring,\n    y: underDampedSpring,\n    z: underDampedSpring,\n    rotate: underDampedSpring,\n    rotateX: underDampedSpring,\n    rotateY: underDampedSpring,\n    rotateZ: underDampedSpring,\n    scaleX: criticallyDampedSpring,\n    scaleY: criticallyDampedSpring,\n    scale: criticallyDampedSpring,\n    opacity: linearTween,\n    backgroundColor: linearTween,\n    color: linearTween,\n    default: criticallyDampedSpring,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else {\n        const factory = defaultTransitions[valueKey] || defaultTransitions.default;\n        return factory(keyframes[1]);\n    }\n};\n\nexport { criticallyDampedSpring, getDefaultTransition, linearTween, underDampedSpring };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from 'hey-listen';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { animateValue } from './legacy-popmotion/index.mjs';\nimport { inertia } from './legacy-popmotion/inertia.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        else if (valueTransition.type === \"inertia\") {\n            /**\n             * If this is an inertia animation, we currently don't support pre-generating\n             * keyframes for this as such it must always run on the main thread.\n             */\n            return inertia(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './index.mjs';\nimport { velocityPerSecond } from '../../utils/velocity-per-second.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nfunction inertia({ keyframes, velocity = 0, min, max, power = 0.8, timeConstant = 750, bounceStiffness = 500, bounceDamping = 10, restDelta = 1, modifyTarget, driver, onUpdate, onComplete, onStop, }) {\n    const origin = keyframes[0];\n    let currentAnimation;\n    function isOutOfBounds(v) {\n        return (min !== undefined && v < min) || (max !== undefined && v > max);\n    }\n    function findNearestBoundary(v) {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    }\n    function startAnimation(options) {\n        currentAnimation && currentAnimation.stop();\n        currentAnimation = animateValue({\n            keyframes: [0, 1],\n            velocity: 0,\n            ...options,\n            driver,\n            onUpdate: (v) => {\n                onUpdate && onUpdate(v);\n                options.onUpdate && options.onUpdate(v);\n            },\n            onComplete,\n            onStop,\n        });\n    }\n    function startSpring(options) {\n        startAnimation({\n            type: \"spring\",\n            stiffness: bounceStiffness,\n            damping: bounceDamping,\n            restDelta,\n            ...options,\n        });\n    }\n    if (isOutOfBounds(origin)) {\n        // Start the animation with spring if outside the defined boundaries\n        startSpring({\n            velocity,\n            keyframes: [origin, findNearestBoundary(origin)],\n        });\n    }\n    else {\n        /**\n         * Or if the value is out of bounds, simulate the inertia movement\n         * with the decay animation.\n         *\n         * Pre-calculate the target so we can detect if it's out-of-bounds.\n         * If it is, we want to check per frame when to switch to a spring\n         * animation\n         */\n        let target = power * velocity + origin;\n        if (typeof modifyTarget !== \"undefined\")\n            target = modifyTarget(target);\n        const boundary = findNearestBoundary(target);\n        const heading = boundary === min ? -1 : 1;\n        let prev;\n        let current;\n        const checkBoundary = (v) => {\n            prev = current;\n            current = v;\n            velocity = velocityPerSecond(v - prev, frameData.delta);\n            if ((heading === 1 && v > boundary) ||\n                (heading === -1 && v < boundary)) {\n                startSpring({ keyframes: [v, boundary], velocity });\n            }\n        };\n        startAnimation({\n            type: \"decay\",\n            keyframes: [origin, 0],\n            velocity,\n            timeConstant,\n            power,\n            restDelta,\n            modifyTarget,\n            onUpdate: isOutOfBounds(target) ? checkBoundary : undefined,\n        });\n    }\n    return {\n        stop: () => currentAnimation && currentAnimation.stop(),\n    };\n}\n\nexport { inertia };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { AnimationType } from './types.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\nconst variantPriorityOrder = [\n    AnimationType.Animate,\n    AnimationType.InView,\n    AnimationType.Focus,\n    AnimationType.Hover,\n    AnimationType.Tap,\n    AnimationType.Drag,\n    AnimationType.Exit,\n];\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                child.animationState &&\n                    child.animationState.setActive(type, isActive);\n            });\n        }\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        [AnimationType.Animate]: createTypeState(true),\n        [AnimationType.InView]: createTypeState(),\n        [AnimationType.Hover]: createTypeState(),\n        [AnimationType.Tap]: createTypeState(),\n        [AnimationType.Drag]: createTypeState(),\n        [AnimationType.Focus]: createTypeState(),\n        [AnimationType.Exit]: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState, variantPriorityOrder };\n","import { AnimationType } from '../../../render/utils/types.mjs';\nimport { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(AnimationType.Exit, !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from 'hey-listen';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { AnimationType } from '../../render/utils/types.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            onDragStart && onDragStart(event, info);\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(AnimationType.Drag, true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        onDragEnd && onDragEnd(event, info);\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(AnimationType.Drag, false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from 'hey-listen';\n\nfunction isCSSVariable(value) {\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariable(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariable(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariable(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            this.isTransformDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this or any\n             * child might need recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        /**\n         *\n         */\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.isProjectionDirty = true;\n            this.root.scheduleUpdateProjection();\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            if (!this.isProjectionDirty && !this.attemptToResolveRelativeTarget)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if ((this.parent.relativeTarget ||\n                this.parent.targetDelta ||\n                this.parent.options.layoutRoot) &&\n                this.parent.layout) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        calcProjection() {\n            const { isProjectionDirty, isTransformDirty } = this;\n            this.isProjectionDirty = this.isTransformDirty = false;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            if (isProjectionDirty)\n                canSkip = false;\n            if (isShared && isTransformDirty)\n                canSkip = false;\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Propagate isProjectionDirty. Nodes are ordered by depth, so if the parent here\n     * is dirty we can simply pass this forward.\n     */\n    node.isProjectionDirty || (node.isProjectionDirty = Boolean(node.parent && node.parent.isProjectionDirty));\n    /**\n     * Propagate isTransformDirty.\n     */\n    node.isTransformDirty || (node.isTransformDirty = Boolean(node.parent && node.parent.isTransformDirty));\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return {\n        stop: () => value.stop(),\n        isAnimating: () => value.isAnimating(),\n    };\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: onPanSessionStart,\n            onStart: onPanStart,\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                onPanEnd && onPanEnd(event, info);\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from 'hey-listen';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nvar BoundingBoxDimension;\n(function (BoundingBoxDimension) {\n    BoundingBoxDimension[\"width\"] = \"width\";\n    BoundingBoxDimension[\"height\"] = \"height\";\n    BoundingBoxDimension[\"left\"] = \"left\";\n    BoundingBoxDimension[\"right\"] = \"right\";\n    BoundingBoxDimension[\"top\"] = \"top\";\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { BoundingBoxDimension, positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from 'hey-listen';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { variantPriorityOrder } from './utils/animation-state.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\nconst variantProps = [\"initial\", ...variantPriorityOrder];\nconst numVariantProps = variantProps.length;\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"9.0.7\", `Attempting to mix Framer Motion versions ${nextValue.version} with 9.0.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariable } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariable(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","useVisualElement","Component","visualState","props","createVisualElement","parent","useContext","visualElement","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","initial","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantProps","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","context","undefined","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","key","isEnabled","useConstant","init","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","isCSSVariable","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","AnimationType","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","Hover","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","callback","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","delete","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","viewportFallback","requestAnimationFrame","onViewportEnter","InView","startObserver","viewport","rootMargin","amount","once","fallback","threshold","isIntersecting","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","Tap","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","Focus","onBlur","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","frameData","delta","timestamp","defaultTimestep","getCurrentTime","performance","now","Date","onNextFrame","setTimeout","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","keepAlive","immediate","addToCurrentFrame","buffer","add","push","cancel","index","splice","process","createRenderStep","sync","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","notify","c","numSubscriptions","getSize","clear","velocityPerSecond","velocity","frameDuration","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","isNaN","owner","onChange","subscription","on","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","getPrevious","startAnimation","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","instantAnimationState","mirrorEasing","easing","reverseEasing","easeIn","easeOut","easeInOut","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","circIn","sin","acos","circOut","circInOut","backOut","backIn","backInOut","easingLookup","linear","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isEasingArray","keyframes","keyframeValues","times","duration","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","_value","defaultOffset","createInterpolator","flipTarget","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","velocitySampleDuration","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","resolveSpring","zero","initialVelocity","createSpring","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","prevT","isBelowVelocityThreshold","isBelowDisplacementThreshold","needsInterpolation","_t","types","decay","power","timeConstant","modifyTarget","amplitude","ideal","tween","loopElapsed","elapsed","delay","framesync","passTimestamp","animateValue","driver","repeat","repeatMax","repeatType","repeatDelay","keyframes$1","autoplay","onPlay","onStop","onComplete","onRepeat","onUpdate","initialElapsed","driverControls","interpolateFromNumber","repeatCount","computedDuration","isComplete","isForwardPlayback","animator","reverseElapsed","hasRepeatDelayElapsed","currentTime","sample","sampleResolution","sampleElapsed","remaining","cubicBezierAsString","supportedWaapiEasing","mapEasingToNativeEasing","featureTests","waapi","Element","results","supports","acceleratedValues","sampleDelta","createAcceleratedAnimation","valueName","Infinity","sampleAnimation","pregeneratedKeyframes","iterations","direction","animateStyle","onfinish","getFinalKeyframe","timeout","checkElapsed","createInstantAnimation","setValue","underDampedSpring","criticallyDampedSpring","linearTween","keyframesTransition","defaultTransitions","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","bounceStiffness","bounceDamping","currentAnimation","isOutOfBounds","findNearestBoundary","startSpring","boundary","heading","checkBoundary","inertia","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","willChange","animationTypeState","getState","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","protectedKeys","needsAnimating","shouldBlock","variantPriorityOrder","Animate","Drag","Exit","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","token","exec","parseCSSVariable","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","elementId","animationId","isTreeAnimating","isTransformDirty","isProjectionDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","getLead","attemptToResolveRelativeTarget","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isShared","canSkip","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","parseDomVariant","resolveCSSVariables","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","numVariantProps","closestVariantNode","removeValueFromRenderState","readValue","readValueFromInstance","setBaseTarget","valueFromInitial","getBaseTargetFromProps","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion"],"sourceRoot":""}